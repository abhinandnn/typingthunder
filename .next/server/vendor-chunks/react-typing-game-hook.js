/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-typing-game-hook";
exports.ids = ["vendor-chunks/react-typing-game-hook"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-typing-game-hook/dist/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-typing-game-hook/dist/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({\n    value: !0\n}));\nvar r = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"), e = function() {\n    return e = Object.assign || function(r) {\n        for(var e, t = 1, a = arguments.length; t < a; t++)for(var n in e = arguments[t])Object.prototype.hasOwnProperty.call(e, n) && (r[n] = e[n]);\n        return r;\n    }, e.apply(this, arguments);\n};\n/*! *****************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */ function t(r, e) {\n    for(var t = 0, a = e.length, n = r.length; t < a; t++, n++)r[n] = e[t];\n    return r;\n}\nvar a;\n!function(r) {\n    r._ONTEXTCHANGE = \"INTERNAL/ONTEXTCHANGE\", r.RESET = \"RESET\", r.END = \"END\", r.TYPINGINSERT = \"TYPING/INSERT\", r.TYPINGDELETE = \"TYPING/DELETE\", r.SETCURRENTINDEX = \"SET/CURRENTINDEX\";\n}(a || (a = {}));\nvar n = {\n    NotStarted: 0,\n    Started: 1,\n    Ended: 2\n}, u = function(r, n) {\n    switch(n.type){\n        case a.SETCURRENTINDEX:\n            return function(r, t) {\n                var a, n = r.chars, u = r.length, c = null !== (a = t.payload) && void 0 !== a ? a : null;\n                return c && \"number\" == typeof c && c >= -1 && c < u ? e(e({}, r), {\n                    currIndex: c,\n                    currChar: n[c]\n                }) : r;\n            }(r, n);\n        case a.RESET:\n            return function(r) {\n                var t = r.chars;\n                return e(e({}, r), {\n                    startTime: null,\n                    endTime: null,\n                    charsState: new Array(t.length).fill(0),\n                    currIndex: -1,\n                    currChar: \"\",\n                    correctChar: 0,\n                    errorChar: 0,\n                    phase: 0\n                });\n            }(r);\n        case a.END:\n            return function(r) {\n                return e(e({}, r), {\n                    phase: 2,\n                    endTime: (new Date).getTime()\n                });\n            }(r);\n        case a.TYPINGINSERT:\n            return function(r, a) {\n                var n, u = r.startTime, c = r.endTime, o = r.chars, s = r.charsState, i = r.length, l = r.currIndex, T = r.correctChar, E = r.errorChar, h = r.phase, p = r.skipCurrentWordOnSpace, d = r.pauseOnError, f = r.countErrors, C = null !== (n = a.payload) && void 0 !== n ? n : null, N = u, y = c;\n                if (2 === h) return r;\n                0 === h && (h = 1, N = (new Date).getTime());\n                var v = t([], s);\n                if (\" \" === C && \" \" !== o[l + 1] && p) {\n                    var I = o.indexOf(C, l);\n                    l = -1 === I ? i - 1 : I;\n                } else null !== C ? o[l + 1] !== C ? (2 == v[l + 1] ? \"everytime\" === f && (E += 1) : (v[l + 1] = 2, E += 1), d || (l += 1)) : (2 === v[l + 1] && d && \"once\" === f && (E -= 1), v[l + 1] = 1, T += 1, l += 1) : l += 1;\n                l >= i - 1 && (y = (new Date).getTime(), h = 2);\n                var m = l >= 0 ? o[l] : \"\";\n                return e(e({}, r), {\n                    charsState: v,\n                    errorChar: E,\n                    correctChar: T,\n                    currIndex: l,\n                    currChar: m,\n                    phase: h,\n                    startTime: N,\n                    endTime: y\n                });\n            }(r, n);\n        case a.TYPINGDELETE:\n            return function(r, a) {\n                var n, u = r.chars, c = r.charsState, o = r.currIndex, s = r.correctChar, i = r.errorChar, l = r.phase, T = r.countErrors, E = null !== (n = a.payload) && void 0 !== n ? n : null;\n                if (1 !== l || -1 === o) return r;\n                var h = t([], c);\n                if (E) {\n                    var p = u.lastIndexOf(\" \", o);\n                    p = -1 === p ? 0 : p + 1;\n                    for(var d = o; d >= p; d--)1 === h[d] ? s -= 1 : 2 === h[d] && \"once\" === T && (i -= 1), h[d] = 0;\n                    o = p;\n                } else 1 === h[o] ? s -= 1 : 2 === h[o] && \"once\" === T && (i -= 1), h[o] = 0;\n                -1 !== o && (o -= 1);\n                var f = o >= 0 ? u[o] : \"\";\n                return e(e({}, r), {\n                    currIndex: o,\n                    currChar: f,\n                    charsState: h,\n                    correctChar: s,\n                    errorChar: i\n                });\n            }(r, n);\n        case a._ONTEXTCHANGE:\n            return n.payload;\n        default:\n            return r;\n    }\n};\nexports.CharStateType = {\n    Incomplete: 0,\n    Correct: 1,\n    Incorrect: 2\n}, exports.PhaseType = n, exports[\"default\"] = function(t, c) {\n    void 0 === t && (t = \"\"), void 0 === c && (c = {});\n    var o = r.useMemo(function() {\n        return e({\n            startTime: null,\n            endTime: null,\n            chars: t,\n            charsState: new Array(t.length).fill(0),\n            length: t.length,\n            currIndex: -1,\n            currChar: \"\",\n            correctChar: 0,\n            errorChar: 0,\n            phase: 0,\n            skipCurrentWordOnSpace: !0,\n            pauseOnError: !1,\n            countErrors: \"everytime\"\n        }, c);\n    }, [\n        c,\n        t\n    ]), s = r.useReducer(u, o), i = s[0], l = s[1];\n    r.useEffect(function() {\n        l({\n            type: a._ONTEXTCHANGE,\n            payload: o\n        });\n    }, [\n        t,\n        l\n    ]);\n    var T = r.useCallback(function() {\n        switch(i.phase){\n            case n.NotStarted:\n                return 0;\n            case n.Started:\n                return i.startTime ? (new Date).getTime() - i.startTime : 0;\n            case n.Ended:\n                return i.startTime && i.endTime ? i.endTime - i.startTime : 0;\n        }\n    }, [\n        i.phase,\n        i.startTime,\n        i.startTime\n    ]), E = r.useCallback(function() {\n        return l({\n            type: a.RESET\n        });\n    }, [\n        l\n    ]), h = r.useCallback(function() {\n        return l({\n            type: a.END\n        });\n    }, [\n        l\n    ]), p = r.useCallback(function(r) {\n        var e = r ? r[0] : null;\n        l({\n            type: a.TYPINGINSERT,\n            payload: e\n        });\n    }, [\n        l\n    ]), d = r.useCallback(function(r) {\n        void 0 === r && (r = !1), l({\n            type: a.TYPINGDELETE,\n            payload: r || !1\n        });\n    }, [\n        l\n    ]), f = r.useCallback(function(r) {\n        return !(r < -1 || r >= i.length || 2 !== i.phase) && (l({\n            type: a.SETCURRENTINDEX,\n            payload: r\n        }), !0);\n    }, [\n        l,\n        i.length,\n        i.phase\n    ]);\n    return {\n        states: i,\n        actions: {\n            getDuration: T,\n            resetTyping: E,\n            endTyping: h,\n            insertTyping: p,\n            deleteTyping: d,\n            setCurrIndex: f\n        }\n    };\n}; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-typing-game-hook/dist/index.js\n");

/***/ })

};
;